services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    entrypoint: ["bash", "entrypoint.sh"]
    command: uvicorn src.__main__:app --host=0.0.0.0 --workers 4
    volumes:
      - .:/src
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_PORT
      - POSTGRES_HOST
      - SECRET_KEY
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_PORT
      - POSTGRES_HOST
    volumes:
      - ./pgdata-volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "$POSTGRES_DB", "-U", "$POSTGRES_USER" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  nginx:
    restart: "always"
    build:
      context: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.htpasswd:/etc/nginx/conf.d/.htpasswd
    depends_on:
      - app
    ports:
      - "80:80"
    networks:
      - app-network

volumes:
    pgdata-volume:

networks:
  app-network: